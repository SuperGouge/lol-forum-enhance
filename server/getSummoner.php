<?php/*  *  getSummoner.php * *  This works as a cache between the user (or the userscript) and the elophant server *  to get the summoner information faster, more reliable (elophants servers are down *  or the global maximum of querys they can handle exceed pretty often) and to keep *  the amount of API Calls as low as possible. * *  Usage: *  getSummoner.php?summoner=ButWhyMe&server=euw * */// Uncomment this for extended error reporting://error_reporting(E_ALL);// Includesrequire_once('Settings.class.php');require_once('Summoner.class.php');// Settings$settings = new Settings();// Init$my_sql_link = mysql_connect($settings->my_sql_host, $settings->my_sql_user, $settings->my_sql_password) or die('Cannot connect to MySQL server.');mysql_set_charset($settings->my_sql_charset, $my_sql_link);mysql_select_db($settings->my_sql_db, $my_sql_link) or die('Database does not exist.');$callback = false;if (isset($_GET['callback'])) // Is it a jsonp request? Is callback set?{	$callback_string = stripslashes(rawurldecode($_GET['callback']));	$callback = true;}if ($callback) header('Content-Type: text/javascript; charset=utf-8');else header('Content-Type: application/json; charset=utf-8');if(!(isset($_GET['server']) && isset($_GET['summoner']))) die('Input values not set.'); // TODO: write error into database instead of just showing it$forum_server = mysql_real_escape_string(utf8_encode($_GET['server']), $my_sql_link);$forum_user = mysql_real_escape_string(utf8_encode($_GET['summoner']), $my_sql_link);// Get IP address of caller@$http_client_ip = $_SERVER['HTTP_CLIENT_IP'];@$http_x_forwarded_for = $_SERVER['HTTP_X_FORWARDED_FOR'];@$remote_addr = $_SERVER['REMOTE_ADDR'];if (isset($http_client_ip)){	$ip = $http_client_ip;}else if (isset($http_x_forwarded_for)){	$ip = $http_x_forwarded_for;}else{	$ip = $remote_addr;}// Functionsfunction updateNecessary ($timestring_last_edit){$offset = '-12 Hour';$act = time();$last_edit = strtotime($timestring_last_edit);$test = strtotime($offset, $act);	if ($last_edit <= $test) return true;	else return false;}function getDateFromJson($datestring){	preg_match('@Date\(([0-9]{1,})\)@', $datestring, $matches);	return date('Y-m-d H:i:s', substr($matches[1], 0, -3));}function writeDb($summoner, $my_sql_link, $my_sql_prefix){	$query = 'SELECT id, name, revisionDate, currentDate FROM '.$my_sql_prefix.'summoner WHERE name="'.mysql_real_escape_string($summoner->name).'" AND server="'.mysql_real_escape_string($summoner->server).'" LIMIT 1;';	$query_result = mysql_query($query, $my_sql_link);	if (!empty($query_result)) $result = mysql_fetch_object($query_result);	else $result = false;	if ($result != false)	{		// Summoner name IN Database		$query = 'UPDATE '.$my_sql_prefix.'summoner SET internalName="'.mysql_real_escape_string($summoner->internalName).'", name="'.mysql_real_escape_string($summoner->name).'", server="'.mysql_real_escape_string($summoner->server).'", acctId='.mysql_real_escape_string($summoner->acctId).', profileIconId='.mysql_real_escape_string($summoner->profileIconId).', summonerLevel='.mysql_real_escape_string($summoner->summonerLevel).', summonerId='.mysql_real_escape_string($summoner->summonerId).', revisionDate="'.mysql_real_escape_string($summoner->revisionDate).'", currentDate="'.mysql_real_escape_string($summoner->currentDate).'", success="'.mysql_real_escape_string($summoner->success).'" WHERE id='.$result->id.';';		$result = mysql_query($query, $my_sql_link);		if ($result == false) die('Error while updating '.$my_sql_prefix.'summoner in Database. ('.mysql_error($my_sql_link).')'); // TODO: write error into database instead of just showing it	} else	{		// Summoner name NOT IN Database		$query = 'INSERT INTO '.$my_sql_prefix.'summoner (internalName, name, server, acctId, profileIconId, summonerLevel, summonerId, revisionDate, currentDate, success) VALUES ("'.mysql_real_escape_string($summoner->internalName).'", "'.mysql_real_escape_string($summoner->name).'", "'.mysql_real_escape_string($summoner->server).'", '.mysql_real_escape_string($summoner->acctId).', '.mysql_real_escape_string($summoner->profileIconId).', '.mysql_real_escape_string($summoner->summonerLevel).', '.mysql_real_escape_string($summoner->summonerId).', "'.mysql_real_escape_string($summoner->revisionDate).'", "'.mysql_real_escape_string($summoner->currentDate).'", "'.mysql_real_escape_string($summoner->success).'");';		$result = mysql_query($query, $my_sql_link);		if ($result == false) die('Error while inserting '.$my_sql_prefix.'summoner in Database. ('.mysql_error($my_sql_link).')'); // TODO: write error into database instead of just showing it	}}function getSummonerFromElophant($forum_server, $forum_user, $elophant_api_key, &$error, &$summoner){	$json_call = 'http://api.elophant.com/v2/' . str_replace(' ', '%20', $forum_server) . '/summoner/' . str_replace(' ', '%20', $forum_user) . '?key=' . $elophant_api_key; 	$ch = curl_init(utf8_decode($json_call));	$options = array(		CURLOPT_RETURNTRANSFER => true,		CURLOPT_HTTPHEADER => array('Content-type: application/json') 	);	curl_setopt_array($ch, $options);	$json_response = curl_exec($ch);		// evaluate response	if ($json_response != false)	{		$json_object = json_decode($json_response);		if ($json_object->success)		{			// Summoner found on Elophant			$summoner = new Summoner();			$summoner->internalName = $json_object->data->internalName;			$summoner->name = $json_object->data->name;			$summoner->server = $forum_server;			$summoner->acctId = $json_object->data->acctId;			$summoner->profileIconId = $json_object->data->profileIconId;			$summoner->revisionDate = getDateFromJson($json_object->data->revisionDate);			$summoner->currentDate = date('Y-m-d H:i:s');			$summoner->summonerLevel = $json_object->data->summonerLevel;			$summoner->summonerId = $json_object->data->summonerId;			$summoner->success = true;			return true;		}		else		{			//Elophant Error: Summoner GÃ©rard The Death was not found.			if (preg_match ('/^Summoner .+ was not found\.$/', $json_object->error))			{				// Summoner not found on Elophant								$summoner = new Summoner();				$summoner->name = $forum_user;				$summoner->server = $forum_server;				$summoner->currentDate = date('Y-m-d H:i:s');				$summoner->success = false;								$error = 'Elophant Error: '. $json_object->error;								return true;			}			else			{				$error = 'Elophant Error: '. $json_object->error;				return false;			}		}	}	else	{		$error = 'HTTP Request failed.';		return false;	}}function getSummonerFromDatabase($forum_server, $forum_user, $my_sql_link, $my_sql_prefix, &$summoner) {	$query = 'SELECT * FROM '.$my_sql_prefix.'summoner WHERE name="'.mysql_real_escape_string($forum_user).'" AND server="'.mysql_real_escape_string($forum_server).'" LIMIT 1;';	$query_result = mysql_query($query, $my_sql_link);	if (!empty($query_result)) $result = mysql_fetch_object($query_result);	else $result = false;	if ($result) {		// found		$summoner = new Summoner();		$summoner->internalName = $result->internalName;		$summoner->name = $result->name;		$summoner->server = $result->server;		$summoner->acctId = $result->acctId;		$summoner->profileIconId = $result->profileIconId;		$summoner->revisionDate = $result->revisionDate;		$summoner->currentDate = $result->currentDate;		$summoner->summonerLevel = $result->summonerLevel;		$summoner->summonerId = $result->summonerId;		$summoner->success = $result->success;				if (!updateNecessary($result->currentDate)) {			return 'act'; // Data is fresh		} else {			return 'old'; // Data is too old		}	} else {		return 'none'; // NOT found	}}function writeApiCallToDb($forum_server, $forum_user, $my_sql_link, $success, $ip, $my_sql_prefix, $error, &$error_out){	$query = 'INSERT INTO '.$my_sql_prefix.'apicalls (ip, date_called, name, server, success, error_string) VALUES ("'.mysql_real_escape_string($ip).'", "'.mysql_real_escape_string(date('Y-m-d H:i:s', time())).'", "'.mysql_real_escape_string($forum_user).'", "'.mysql_real_escape_string($forum_server).'", "'.mysql_real_escape_string($success).'", "'.mysql_real_escape_string($error).'");';	$result = mysql_query($query, $my_sql_link);	if ($result == false) $error_out = 'Error while inserting apicall in Database. ('.mysql_error($my_sql_link).')';}// Script$dbState = getSummonerFromDatabase($forum_server, $forum_user, $my_sql_link, $settings->my_sql_prefix, $summoner);if ($dbState != 'act'){	// Cached Data not up to date	$elophState = getSummonerFromElophant($forum_server, $forum_user, $settings->elophant_api_key, $error, $summoner);	writeApiCallToDb($forum_server, $forum_user, $my_sql_link, $elophState, $ip, $settings->my_sql_prefix, $error, $error);		if ($elophState)	{		// Successful API Call		writeDb($summoner, $my_sql_link, $settings->my_sql_prefix);	} else	{		// Unsuccessful API Call		// if old data is available, show it.	}}else{	// Cached Data up to date}if (isset($summoner)) {	if ($callback) echo $callback_string.'('; // Compose output to javascript function	echo $summoner->toJson();	if ($callback) echo ');'; // Compose output to javascript function} else if (isset($error)) echo $error; // TODO: write error into database instead of just showing it// Exitmysql_close($my_sql_link);?>